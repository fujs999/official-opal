//
// h46018.h
//
// Code automatically generated by asnparse.
//

#include <opal_config.h>

#if ! H323_DISABLE_H46018

#ifndef __H46018_H
#define __H46018_H

#ifdef P_USE_PRAGMA
#pragma interface
#endif

#include <ptclib/asner.h>

#include <asn/h225.h>


//
// IncomingCallIndication
//

class H46018_IncomingCallIndication : public PASN_Sequence
{
#ifndef PASN_LEANANDMEAN
    PCLASSINFO(H46018_IncomingCallIndication, PASN_Sequence);
#endif
  public:
    H46018_IncomingCallIndication(unsigned tag = UniversalSequence, TagClass tagClass = UniversalTagClass);

    H225_TransportAddress m_callSignallingAddress;
    H225_CallIdentifier m_callID;

    virtual PINDEX GetDataLength() const override;
    virtual PBoolean Decode(PASN_Stream & strm) override;
    virtual void Encode(PASN_Stream & strm) const override;
#ifndef PASN_NOPRINTON
    virtual void PrintOn(ostream & strm) const override;
#endif
    virtual Comparison Compare(const PObject & obj) const override;
    virtual PObject * Clone() const override;
};


//
// LRQKeepAliveData
//

class H46018_LRQKeepAliveData : public PASN_Sequence
{
#ifndef PASN_LEANANDMEAN
    PCLASSINFO(H46018_LRQKeepAliveData, PASN_Sequence);
#endif
  public:
    H46018_LRQKeepAliveData(unsigned tag = UniversalSequence, TagClass tagClass = UniversalTagClass);

    H225_TimeToLive m_lrqKeepAliveInterval;

    virtual PINDEX GetDataLength() const override;
    virtual PBoolean Decode(PASN_Stream & strm) override;
    virtual void Encode(PASN_Stream & strm) const override;
#ifndef PASN_NOPRINTON
    virtual void PrintOn(ostream & strm) const override;
#endif
    virtual Comparison Compare(const PObject & obj) const override;
    virtual PObject * Clone() const override;
};


#endif // __H46018_H

#endif // if ! H323_DISABLE_H46018


// End of h46018.h
